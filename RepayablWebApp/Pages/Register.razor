@page "/Register"
@using RepayablWebApp.Data.Repositories
@using RepayablWebApp.Pages.Models
@inject IUserClient _userClient

<div class="auth-main particles_js">
    <div class="auth_div vivify popIn">
        <div class="auth_brand">
            <a class="navbar-brand" href="javascript:void(0);"><img src="assets/images/icon.svg" width="30" height="30" class="d-inline-block align-top mr-2" alt="">Oculux</a>
        </div>
        <div class="card">
            <div class="body">
                <p class="lead">Create an account</p>
                <div class="form-auth-small m-t-20">
                    <div class="form-group">
                        <input class="form-control round" @bind="SelectedUser.FirstName" placeholder="First Name" />
                    </div>
                    <div class="form-group">
                        <input class="form-control round" @bind="SelectedUser.LastName" placeholder="Last Name" />
                    </div>
                    <div class="form-group">
                        <input type="email" class="form-control round" @bind="SelectedUser.UserName" placeholder="Your email" />
                    </div>
                    <div class="form-group">
                        <input type="password" class="form-control round" @bind="SelectedUser.Password" placeholder="Password" />
                    </div>
                    <button @onclick="RegisterUserAsync" class="btn btn-primary btn-round btn-block">Register</button>
                </div>
                <div class="separator-linethrough"><span>OR</span></div>
                <button class="btn btn-round btn-signin-social"><i class="fa fa-facebook-official facebook-color"></i> Sign in with Facebook</button>
                <button class="btn btn-round btn-signin-social"><i class="fa fa-twitter twitter-color"></i> Sign in with Twitter</button>
            </div>
        </div>
    </div>
    <div id="particles-js"></div>

</div>
@if (SuccessMsg)
{
    <SmallModal Title="Register" Message="Registeration Successfully completed" />
}

@code {
    public User SelectedUser { get; set; } = new User();
    public bool SuccessMsg { get; set; }
    public async Task RegisterUserAsync()
    {
        try
        {
            await _userClient.RegisterAsync(SelectedUser);
            SuccessMsg = true;
        }
        catch (Exception ex)
        {


        }


    }

}
